#!/usr/bin/env python
# -*- coding: utf-8 -*-
#vim:fdm=marker
# unlock vim folding via zR, zo and lock folding via zM, zc
#----------------------------------------------------------------------------
"""                                                                     
DESCRIPTION    converts directories and files to ascii stream            {{{1

USAGE          call this script with -h or --help option
      
CHANGELOG    
   10-02-12    * creation, copied from fstools.py

TODO

THANKS TO

"""

__version__ = "$Revision: 0.1.2010-02-12 $"
# $Source$


#----------------------------------------------------------------------------
# modules import, constants                                              {{{1
#----------------------------------------------------------------------------
# standard
import logging
import sys
log = logging.getLogger( __name__ )

# extra modules
from pt.optparser import *   # analyse command line options

# constants
 
#----------------------------------------------------------------------------
# support functions                                                      {{{1
#----------------------------------------------------------------------------
def parseArgs( args ):
    # script specific command line options
    parser = OptParser(
        usage       = '%prog SOURCE_FILE,DIR1 [SOURCE_FILE,DIR2 ... ]',
        description = 'Compresses source files or directories and displays compressed content as ascii stream.\nThis meant to be used for transfering directories by means of terminal copy paste.'   ,
        standard_opts = True,
        daemon_opts   = False,
    )

    parser.add_option( '-o', '--outfile', dest="outfile",
                    action='store', default = None,
                    help='Store ascii stream to OUTFILE')


    # command line option handling
    return parser.parse_args( args, log )

#----------------------------------------------------------------------------
# main script                                                            {{{1
#----------------------------------------------------------------------------
if __name__ == "__main__":
    import sys
    import os
    import tempfile
    #import pt.logger   # set up logger
    import pt.terminal 
    import pt.files.ascii_bin
    import pt.files.tar

    DEFAULT_TERMINAL_COLS = 150


    if sys.argv[0] == '-':
        # test command line arguments
        argv = [ 
            '',
            '-v', 
            '/home/gunnar/python',
            '-o', '/tmp/test'
        ]
    else:
        # script called externally
        argv = sys.argv[1:] 

    # check input
    opts, args = parseArgs( argv )
    source_pathes = args
    if len(source_pathes) == 0:
        sys.stderr.write("No input defined, try --help option\n")
        sys.exit(2)

    # create tmpfile, compress input to tar tmpfile
    tmp_file_fh = tempfile.NamedTemporaryFile(mode='w+b')
    try: 
        pt.files.tar.compress( source_pathes, tmp_file_fh.name )
    except pt.files.tar.TarError, emsg:
        sys.stderr.write( "%s\n" % emsg)
        sys.exit(1)

    # encode to outfile (if given ) or just print
    if opts.outfile:
        out = open ( opts.outfile, 'w')
        terminal_cols = DEFAULT_TERMINAL_COLS
    else:
        out = sys.stdout
        terminal_cols = pt.terminal.terminalSize()[0]

    try: 
        pt.files.ascii_bin.bin2asc( 
            tmp_file_fh, out, 
            line_length=terminal_cols, 
        )
    except pt.files.ascii_bin.Asc2BinError, emsg:
        sys.stderr.write( "%s\n" % emsg)
        sys.exit(1)
        

