#!/usr/bin/env python
# -*- coding: utf-8 -*-
#vim:fdm=marker
# unlock vim folding via zR, zo and lock folding via zM, zc
#----------------------------------------------------------------------------
"""                                                                     
DESCRIPTION    simple directory handler functions                        {{{1

USAGE          call this script with -h or --help option
      
CHANGELOG    
   10-02-12    * 

TODO

THANKS TO

"""

__version__ = "$Revision: 0.1.2010-02-12 $"
# $Source$


#----------------------------------------------------------------------------
# modules import, constants                                              {{{1
#----------------------------------------------------------------------------
# standard
import logging
import sys
log = logging.getLogger( __name__ )

# extra modules
import pt.optparser # analyse command line options
import pt.config    # configfile handler

# constants
 
#----------------------------------------------------------------------------
# support functions                                                      {{{1
#----------------------------------------------------------------------------
def loadConfig( config_file ):
    return pt.config.Config( config_file , create_empty = True )


def parseArgs( args ):
    # script specific command line options
    parser = pt.optparser.OptParser(
        usage       = '%prog CMD PATH'               ,
        description = 'some example shell script'   ,
        standard_opts = True,
        daemon_opts   = False,
    )
    parser.add_option( '', '--target', dest="target",
                    action='store_true', default = False,
                    help='destination')
    parser.add_option( '-f', '--config', dest="config",
                    action='store', default = None,
                    help='alternate config file')
    parser.add_option( '-t', '--test', dest="run_test",
                    action='store_true', default = False,
                    help='run shell script tests')


    # command line option handling
    return parser.parse_args( args, log )


#----------------------------------------------------------------------------
# main script                                                            {{{1
#----------------------------------------------------------------------------
if __name__ == "__main__":
    import sys
    import os
    from pt.terminal import * # flush buffers, colors, terminal size
    import pt.logger  

    if sys.argv[0] == '-':
        # test command line arguments
        argv = [ 
#            '-h',
            '-v', 
            '-t',
        ]
    else:
        # script called externally
        argv = sys.argv[1:] 

    # initialize logger
    log = pt.logger.Logger(
        name         = None ,           # __name__ or self.__class__.__name__ 
                                        # None = root logger
        level        = logging.DEBUG,   
        file_file    = None,            # None = no file logging
        file_level   = logging.DEBUG,
    )

    opts, args = parseArgs( argv )
    #config     = loadConfig( opts.config )

    print "%sred %salarm%s normal" % ( RED, ALARM, NORMAL )

